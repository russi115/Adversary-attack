# -*- coding: utf-8 -*-
"""Ataque Adversario.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JECM6g5u-_bbA6HPqnzxkmyaAfHNlUGj
"""

import tensorflow as tf
import keras

import matplotlib.pyplot as plt
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

PATH = "/content/drive/My Drive"
INPATH = PATH + '/jpg/image_00001.jpg'
CAT = "/content/drive/My Drive/Alert Kitten.jpg"
HACKED = PATH + "/hacked.jpg"

from keras.applications.inception_v3 import InceptionV3, decode_predictions
from keras import backend as k 
from tensorflow.python.framework.ops import disable_eager_execution

disable_eager_execution()

iv3 = InceptionV3()

from keras.preprocessing import image

x = image.img_to_array(image.load_img(HACKED, target_size=(299, 299)))

#Cambio de rango, 0-255 -> -1-1
x /= 255
x -= 0.5
x *= 2

x = x.reshape([1, x.shape[0], x.shape[1], x.shape[2]])
print(x.shape)

y = iv3.predict(x)

decode_predictions(y)

inp_layer = iv3.layers[0].input
out_layer = iv3.layers[-1].output

target_class = 951

loss = out_layer[0, target_class]

grad = k.gradients(loss, inp_layer)[0]

optimize_gradient = k.function([inp_layer, k.learning_phase()], [grad, loss])

adv = np.copy(x)

pert = 0.01

max_pert = x + pert
min_pert = x - pert

cost = 0.0

while cost < 0.95:

    gr, cost = optimize_gradient([adv, 0])

    adv += gr

    adv = np.clip(adv, min_pert, max_pert)
    adv = np.clip(adv, -1, 1)

    print("lemon cost:", cost)

hacked_img= np.copy(adv)

adv /= 2
adv += 0.5
adv *= 255

plt.imshow(adv[0].astype(np.uint8))
plt.show()

from PIL import Image
im = Image.fromarray(adv[0].astype(np.uint8))
im.save(PATH + "/hacked.jpg")